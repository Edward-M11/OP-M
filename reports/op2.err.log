Traceback (most recent call last):
  File "C:\Users\Edward Morales\miniconda3\envs\ml_venv\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Edward Morales\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\Edward Morales\miniconda3\envs\ml_venv\lib\site-packages\jupyter_core\utils\__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\Edward Morales\miniconda3\envs\ml_venv\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\Edward Morales\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Edward Morales\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Edward Morales\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

# Valores de C y tipos de kernel para probar
C_values = [0.01,0.1, 1, 10,100]
kernels = ['linear', 'rbf', 'poly']

# Almacenar resultados para la visualizaciÃ³n
results = []

# Entrenar modelos y evaluar precisiÃ³n
for kernel in kernels:
    for C in C_values:
        svc = SVC(C=C, kernel=kernel)
        svc.fit(X_train_scaled, y_train)
        train_accuracy = accuracy_score(y_train, svc.predict(X_train_scaled))
        test_accuracy = accuracy_score(y_test, svc.predict(X_test_scaled))
        results.append({'C': C, 'Kernel': kernel, 'Training Accuracy': train_accuracy, 'Test Accuracy': test_accuracy})

# Convertir resultados en un DataFrame para facilitar la visualizaciÃ³n
results_df = pd.DataFrame(results)

# GrÃ¡fico de rendimiento
for kernel in kernels:
    subset = results_df[results_df['Kernel'] == kernel]
    plt.plot(subset['C'], subset['Training Accuracy'], label=f'{kernel} - Train')
    plt.plot(subset['C'], subset['Test Accuracy'], label=f'{kernel} - Test')

plt.legend()
plt.xscale('log')
plt.xlabel('C value')
plt.ylabel('Accuracy')
plt.title('SVM Accuracy with Different C values and Kernels')
plt.show()

------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
Cell [1;32mIn[19], line 18[0m
[0;32m     16[0m         svc[38;5;241m.[39mfit(X_train_scaled, y_train)
[0;32m     17[0m         train_accuracy [38;5;241m=[39m accuracy_score(y_train, svc[38;5;241m.[39mpredict(X_train_scaled))
[1;32m---> 18[0m         test_accuracy [38;5;241m=[39m accuracy_score(y_test, [43msvc[49m[38;5;241;43m.[39;49m[43mpredict[49m[43m([49m[43mX_test_scaled[49m[43m)[49m)
[0;32m     19[0m         results[38;5;241m.[39mappend({[38;5;124m'[39m[38;5;124mC[39m[38;5;124m'[39m: C, [38;5;124m'[39m[38;5;124mKernel[39m[38;5;124m'[39m: kernel, [38;5;124m'[39m[38;5;124mTraining Accuracy[39m[38;5;124m'[39m: train_accuracy, [38;5;124m'[39m[38;5;124mTest Accuracy[39m[38;5;124m'[39m: test_accuracy})
[0;32m     21[0m [38;5;66;03m# Convertir resultados en un DataFrame para facilitar la visualizaciÃ³n[39;00m

File [1;32m~\miniconda3\envs\ml_venv\lib\site-packages\sklearn\svm\_base.py:818[0m, in [0;36mBaseSVC.predict[1;34m(self, X)[0m
[0;32m    816[0m     y [38;5;241m=[39m np[38;5;241m.[39margmax([38;5;28mself[39m[38;5;241m.[39mdecision_function(X), axis[38;5;241m=[39m[38;5;241m1[39m)
[0;32m    817[0m [38;5;28;01melse[39;00m:
[1;32m--> 818[0m     y [38;5;241m=[39m [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mpredict[49m[43m([49m[43mX[49m[43m)[49m
[0;32m    819[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mclasses_[38;5;241m.[39mtake(np[38;5;241m.[39masarray(y, dtype[38;5;241m=[39mnp[38;5;241m.[39mintp))

File [1;32m~\miniconda3\envs\ml_venv\lib\site-packages\sklearn\svm\_base.py:431[0m, in [0;36mBaseLibSVM.predict[1;34m(self, X)[0m
[0;32m    415[0m [38;5;28;01mdef[39;00m [38;5;21mpredict[39m([38;5;28mself[39m, X):
[0;32m    416[0m [38;5;250m    [39m[38;5;124;03m"""Perform regression on samples in X.[39;00m
[0;32m    417[0m 
[0;32m    418[0m [38;5;124;03m    For an one-class model, +1 (inlier) or -1 (outlier) is returned.[39;00m
[1;32m   (...)[0m
[0;32m    429[0m [38;5;124;03m        The predicted values.[39;00m
[0;32m    430[0m [38;5;124;03m    """[39;00m
[1;32m--> 431[0m     X [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_for_predict[49m[43m([49m[43mX[49m[43m)[49m
[0;32m    432[0m     predict [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_sparse_predict [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_sparse [38;5;28;01melse[39;00m [38;5;28mself[39m[38;5;241m.[39m_dense_predict
[0;32m    433[0m     [38;5;28;01mreturn[39;00m predict(X)

File [1;32m~\miniconda3\envs\ml_venv\lib\site-packages\sklearn\svm\_base.py:611[0m, in [0;36mBaseLibSVM._validate_for_predict[1;34m(self, X)[0m
[0;32m    608[0m check_is_fitted([38;5;28mself[39m)
[0;32m    610[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mcallable[39m([38;5;28mself[39m[38;5;241m.[39mkernel):
[1;32m--> 611[0m     X [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_data[49m[43m([49m
[0;32m    612[0m [43m        [49m[43mX[49m[43m,[49m
[0;32m    613[0m [43m        [49m[43maccept_sparse[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mcsr[39;49m[38;5;124;43m"[39;49m[43m,[49m
[0;32m    614[0m [43m        [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mnp[49m[38;5;241;43m.[39;49m[43mfloat64[49m[43m,[49m
[0;32m    615[0m [43m        [49m[43morder[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mC[39;49m[38;5;124;43m"[39;49m[43m,[49m
[0;32m    616[0m [43m        [49m[43maccept_large_sparse[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    617[0m [43m        [49m[43mreset[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    618[0m [43m    [49m[43m)[49m
[0;32m    620[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_sparse [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m sp[38;5;241m.[39misspmatrix(X):
[0;32m    621[0m     X [38;5;241m=[39m sp[38;5;241m.[39mcsr_matrix(X)

File [1;32m~\miniconda3\envs\ml_venv\lib\site-packages\sklearn\base.py:625[0m, in [0;36mBaseEstimator._validate_data[1;34m(self, X, y, reset, validate_separately, cast_to_ndarray, **check_params)[0m
[0;32m    622[0m     out [38;5;241m=[39m X, y
[0;32m    624[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m no_val_X [38;5;129;01mand[39;00m check_params[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mensure_2d[39m[38;5;124m"[39m, [38;5;28;01mTrue[39;00m):
[1;32m--> 625[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_check_n_features[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43mreset[49m[38;5;241;43m=[39;49m[43mreset[49m[43m)[49m
[0;32m    627[0m [38;5;28;01mreturn[39;00m out

File [1;32m~\miniconda3\envs\ml_venv\lib\site-packages\sklearn\base.py:414[0m, in [0;36mBaseEstimator._check_n_features[1;34m(self, X, reset)[0m
[0;32m    411[0m     [38;5;28;01mreturn[39;00m
[0;32m    413[0m [38;5;28;01mif[39;00m n_features [38;5;241m!=[39m [38;5;28mself[39m[38;5;241m.[39mn_features_in_:
[1;32m--> 414[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[0;32m    415[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mX has [39m[38;5;132;01m{[39;00mn_features[38;5;132;01m}[39;00m[38;5;124m features, but [39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m [39m[38;5;124m"[39m
[0;32m    416[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mis expecting [39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39mn_features_in_[38;5;132;01m}[39;00m[38;5;124m features as input.[39m[38;5;124m"[39m
[0;32m    417[0m     )

[1;31mValueError[0m: X has 3 features, but SVC is expecting 2 features as input.

